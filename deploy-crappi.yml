---
- hosts: crAPI
  become: true

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Setup passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    - name: create group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add Homoney to the docker group
      ansible.builtin.user:
        name: homoneyd
        groups: docker
        append: true

    - name: Create a new regular user for Adam with sudo privileges
      user:
        name: koraba
        state: present
        groups: sudo,docker
        append: true
        create_home: true

    - name: Create a new regular user for Shoaib with sudo privileges
      user:
        name: shoaib
        state: present
        groups: sudo,docker
        append: true
        create_home: true

    - name: Update apt and install required system packages
      apt:
        pkg:
          - curl
          - vim
          - git
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true
    
    - name: Get latest stable version number for kubectl
      ansible.builtin.uri:
        url: "https://storage.googleapis.com/kubernetes-release/stable.txt"
        return_content: yes
      register: stable_version
    
    - name: Download latest stable kubectl
      ansible.builtin.get_url:
        url: "https://storage.googleapis.com/kubernetes-release/release/{{ stable_version }}"
        dest: /usr/local/bin/kubectl
        mode: 0755

    - name: Install microk8s snap
      community.general.snap:
        name: microk8s
        classic: true
        state: present

    - name: "Add current user [{{ ansible_env.SUDO_USER }}] into microk8s group"
      ansible.builtin.user:
        name: "{{ ansible_env.SUDO_USER }}"
        groups: microk8s
        append: yes

    - name: Reset SSH
      meta: reset_connection

    - name: Enable microk8s add-ons
      shell: microk8s enable dns dashboard storage ingress helm3 rbac
      become_user: "{{ ansible_env.SUDO_USER }}"

    - name: Configure host kubectl (no need to run microk8s kubectl)
      ansible.builtin.file:
        path: .kube
        state: directory
      become_user: "{{ ansible_env.SUDO_USER }}"

    - name: Configure kube config for current user
      shell: |
        cd .kube && microk8s config > config
        chmod 600 config
      become_user: "{{ ansible_env.SUDO_USER }}"

    - name: Setup auto compete for kubectl in bash
      ansible.builtin.lineinfile:
        path: .bashrc
        regexp: '^source <\(kubectl completion bash'
        line: "source <(kubectl completion bash)"
        state: present
    
    - name: Install Helm binary
      ansible.builtin.unarchive:
        src: https://get.helm.sh/helm-v3.12.1-linux-386.tar.gz
        remote_src: yes
        dest: /tmp
        
    - name: Move helm to desired destination
      shell: |
        mv /tmp/linux-amd64/helm /usr/local/bin/helm
        rm -rf /tmp/linux-amd64
